
substring.error.nts.smt2
unsat

0: FALSE -> 1
1: main_s12(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 0, 0, 101, 201, 0, 0, 101, 0, 0, 0, 0, 0, 0, 101, 0, 101, 0) -> 2
2: main_s11(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 0, 0, 101, 201, 0, 0, 101, 0, 0, 0, 0, 0, 0, 101, 0, 101, 0) -> 3
3: main_s10(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 0, 0, 101, 201, 0, 0, 101, 0, 0, 0, 0, 0, 0, 101, 0, 101, 0) -> 4
4: main_s8(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 0, 0, 101, 201, 0, 0, 101, 0, 0, 0, 0, 0, 0, 101, 0, 101, 0) -> 5
5: main_s6(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 0, 0, 101, 201, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0) -> 8, 6
6: main_sinter2(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 0, 0, 101, 201, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0) -> 7
7: main_s4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 0, 0, 101, 201, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0) -> 8, 10
8: NonDetInt_s1(0, 0, 0, 0) -> 9
9: NonDetInt_s0(0, 0, 0, 0) -> 14
10: main_sinter1(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 0, 0, 101, 201, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0) -> 11
11: main_s2(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 0, 0, 101, 201, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0) -> 12, 15
12: NonDetInt_s1(0, 0, 101, 0) -> 13
13: NonDetInt_s0(0, 0, 0, 101) -> 14
14: NonDetInt_sinit(0, 0, 0, 0) -> 15
15: main_sinter0(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0) -> 16
16: main_s0(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0) -> 17
17: main_sinit(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

uninterpreted_fun.smt2
Warning: ignoring get-model
sat
(
)

inconclusive.smt2
Warning: ignoring get-model
sat
(
    (define-fun INV_MAIN_0 ((A Int) (B Int)) Bool true)
)

quantifier.smt2
unsat

0: FALSE -> 1
1: inv_main5(0, 0) -> 2
2: inv_main4(0, 0)

clause-shortener-bug.smt2
unsat

0: FALSE -> 11, 8, 1
1: inv_main10(4, 1, 0) -> 4, 11, 8, 3, 2
2: Inv_child(3, child(0, 0)) -> 6
3: inv_main7(4, 1) -> 5, 10
4: Inv_parent(1, parent(0, 3)) -> 5, 10
5: inv_main8(4, 1, 3) -> 6
6: inv_main6(3, 1) -> 8, 7, 11
7: inv_main4(3, 1) -> 9, 10
8: Inv_parent(1, parent(2, 0)) -> 9, 10
9: inv_main5(3, 1, 2) -> 12
10: Inv_parent(1, parent(0, 0)) -> 13
11: Inv_child(2, child(0, 0)) -> 12
12: inv_main3(2, 1) -> 13
13: inv_main2(1)

extract.smt2
unsat

0: FALSE -> 1
1: Inv(mod_cast(0, 255, 244), mod_cast(0, 255, 39)) -> 2
2: Inv(mod_cast(0, 255, 193), mod_cast(0, 255, 244)) -> 3
3: Inv(mod_cast(0, 255, 158), mod_cast(0, 255, 193)) -> 4
4: Inv(mod_cast(0, 255, 107), mod_cast(0, 255, 158)) -> 5
5: Inv(mod_cast(0, 255, 56), mod_cast(0, 255, 107)) -> 6
6: Inv(mod_cast(0, 255, 5), mod_cast(0, 255, 56)) -> 7
7: Inv(mod_cast(0, 255, 5), mod_cast(0, 255, 5))

solution-verifier-bug.smt2
sat
(
    (define-fun ULTIMATE.start_L-1 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool)) Bool (and (= A 0) (not (= I true))))
    (define-fun ULTIMATE.start_L17 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool)) Bool (and (and (and (= G (- 3)) (= F (- 3))) (= A 0)) (not (= I true))))
    (define-fun ULTIMATE.start_L23 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool)) Bool (and (not (= I true)) (= D 3)))
    (define-fun ULTIMATE.start_L29 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool)) Bool (and (and (= D 3) (= A 3)) (not (= I true))))
    (define-fun ULTIMATE.start_L5 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool)) Bool (= I 1))
    (define-fun ULTIMATE.start_L7 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool)) Bool false)
    (define-fun ULTIMATE.start_ULTIMATE.startENTRY ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool)) Bool (and (= B A) (not (= I true))))
    (define-fun ULTIMATE.start_ULTIMATE.startEXIT ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool)) Bool (= I 1))
    (define-fun ULTIMATE.start_ULTIMATE.startFINAL ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Bool)) Bool (and (= I false) (= E C)))
)

groebner-bug.smt2
Warning: ignoring exit
unsat

0: FALSE

test0.correct.pierre.nts.smt2
sat
