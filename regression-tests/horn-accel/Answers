
flat-loops.smt2
Warning: ignoring exit
unsat

0: FALSE -> 1
1: main_1(5, 0, 0, 0, -42, 99, 0, 0, 99, 99) -> 2
2: main_1(4, 0, 0, 0, -42, 99, 0, 0, 99, 99) -> 3
3: main_1(3, 0, 0, 0, -42, 99, 0, 0, 99, 99) -> 4
4: main_1(3, 0, 0, 0, -42, 98, 0, 0, 99, 99) -> 5
5: main_1(3, 0, 0, 0, -42, 97, 0, 0, 99, 99) -> 6
6: main_1(3, 0, 0, 0, -42, 96, 0, 0, 99, 99) -> 7
7: main_1(3, 0, 0, 0, -42, 95, 0, 0, 99, 99) -> 8
8: main_1(3, 0, 0, 0, -42, 94, 0, 0, 99, 99) -> 9
9: main_1(3, 0, 0, 0, -42, 93, 0, 0, 99, 99) -> 10
10: main_1(3, 0, 0, 0, -42, 92, 0, 0, 99, 99) -> 11
11: main_1(3, 0, 0, 0, -42, 91, 0, 0, 99, 99) -> 12
12: main_1(3, 0, 0, 0, -42, 90, 0, 0, 99, 99) -> 13
13: main_1(3, 0, 0, 0, -42, 89, 0, 0, 99, 99) -> 14
14: main_1(3, 0, 0, 0, -42, 88, 0, 0, 99, 99) -> 15
15: main_1(3, 0, 0, 0, -42, 87, 0, 0, 99, 99) -> 16
16: main_1(3, 0, 0, 0, -42, 86, 0, 0, 99, 99) -> 17
17: main_1(3, 0, 0, 0, -42, 85, 0, 0, 99, 99) -> 18
18: main_1(3, 0, 0, 0, -42, 84, 0, 0, 99, 99) -> 19
19: main_1(3, 0, 0, 0, -42, 83, 0, 0, 99, 99) -> 20
20: main_1(3, 0, 0, 0, -42, 82, 0, 0, 99, 99) -> 21
21: main_1(3, 0, 0, 0, -42, 81, 0, 0, 99, 99) -> 22
22: main_1(3, 0, 0, 0, -42, 80, 0, 0, 99, 99) -> 23
23: main_1(3, 0, 0, 0, -42, 79, 0, 0, 99, 99) -> 24
24: main_1(3, 0, 0, 0, -42, 78, 0, 0, 99, 99) -> 25
25: main_1(3, 0, 0, 0, -42, 77, 0, 0, 99, 99) -> 26
26: main_1(3, 0, 0, 0, -42, 76, 0, 0, 99, 99) -> 27
27: main_1(3, 0, 0, 0, -42, 75, 0, 0, 99, 99) -> 28
28: main_1(3, 0, 0, 0, -42, 74, 0, 0, 99, 99) -> 29
29: main_1(3, 0, 0, 0, -42, 73, 0, 0, 99, 99) -> 30
30: main_1(3, 0, 0, 0, -42, 72, 0, 0, 99, 99) -> 31
31: main_1(3, 0, 0, 0, -42, 71, 0, 0, 99, 99) -> 32
32: main_1(3, 0, 0, 0, -42, 70, 0, 0, 99, 99) -> 33
33: main_1(3, 0, 0, 0, -42, 69, 0, 0, 99, 99) -> 34
34: main_1(3, 0, 0, 0, -42, 68, 0, 0, 99, 99) -> 35
35: main_1(3, 0, 0, 0, -42, 67, 0, 0, 99, 99) -> 36
36: main_1(3, 0, 0, 0, -42, 66, 0, 0, 99, 99) -> 37
37: main_1(3, 0, 0, 0, -42, 65, 0, 0, 99, 99) -> 38
38: main_1(3, 0, 0, 0, -42, 64, 0, 0, 99, 99) -> 39
39: main_1(3, 0, 0, 0, -42, 63, 0, 0, 99, 99) -> 40
40: main_1(3, 0, 0, 0, -42, 62, 0, 0, 99, 99) -> 41
41: main_1(3, 0, 0, 0, -42, 61, 0, 0, 99, 99) -> 42
42: main_1(3, 0, 0, 0, -42, 60, 0, 0, 99, 99) -> 43
43: main_1(3, 0, 0, 0, -42, 59, 0, 0, 99, 99) -> 44
44: main_1(3, 0, 0, 0, -42, 58, 0, 0, 99, 99) -> 45
45: main_1(3, 0, 0, 0, -42, 57, 0, 0, 99, 99) -> 46
46: main_1(3, 0, 0, 0, -42, 56, 0, 0, 99, 99) -> 47
47: main_1(3, 0, 0, 0, -42, 55, 0, 0, 99, 99) -> 48
48: main_1(3, 0, 0, 0, -42, 54, 0, 0, 99, 99) -> 49
49: main_1(3, 0, 0, 0, -42, 53, 0, 0, 99, 99) -> 50
50: main_1(3, 0, 0, 0, -42, 52, 0, 0, 99, 99) -> 51
51: main_1(3, 0, 0, 0, -42, 51, 0, 0, 99, 99) -> 52
52: main_1(3, 0, 0, 0, -42, 50, 0, 0, 99, 99) -> 53
53: main_1(3, 0, 0, 0, -42, 49, 0, 0, 99, 99) -> 54
54: main_1(3, 0, 0, 0, -42, 48, 0, 0, 99, 99) -> 55
55: main_1(3, 0, 0, 0, -42, 47, 0, 0, 99, 99) -> 56
56: main_1(3, 0, 0, 0, -42, 46, 0, 0, 99, 99) -> 57
57: main_1(3, 0, 0, 0, -42, 45, 0, 0, 99, 99) -> 58
58: main_1(3, 0, 0, 0, -42, 44, 0, 0, 99, 99) -> 59
59: main_1(3, 0, 0, 0, -42, 43, 0, 0, 99, 99) -> 60
60: main_1(3, 0, 0, 0, -42, 42, 0, 0, 99, 99) -> 61
61: main_1(3, 0, 0, 0, -42, 41, 0, 0, 99, 99) -> 62
62: main_1(3, 0, 0, 0, -42, 40, 0, 0, 99, 99) -> 63
63: main_1(3, 0, 0, 0, -42, 39, 0, 0, 99, 99) -> 64
64: main_1(3, 0, 0, 0, -42, 38, 0, 0, 99, 99) -> 65
65: main_1(3, 0, 0, 0, -42, 37, 0, 0, 99, 99) -> 66
66: main_1(3, 0, 0, 0, -42, 36, 0, 0, 99, 99) -> 67
67: main_1(3, 0, 0, 0, -42, 35, 0, 0, 99, 99) -> 68
68: main_1(3, 0, 0, 0, -42, 34, 0, 0, 99, 99) -> 69
69: main_1(3, 0, 0, 0, -42, 33, 0, 0, 99, 99) -> 70
70: main_1(3, 0, 0, 0, -42, 32, 0, 0, 99, 99) -> 71
71: main_1(3, 0, 0, 0, -42, 31, 0, 0, 99, 99) -> 72
72: main_1(3, 0, 0, 0, -42, 30, 0, 0, 99, 99) -> 73
73: main_1(3, 0, 0, 0, -42, 29, 0, 0, 99, 99) -> 74
74: main_1(3, 0, 0, 0, -42, 28, 0, 0, 99, 99) -> 75
75: main_1(3, 0, 0, 0, -42, 27, 0, 0, 99, 99) -> 76
76: main_1(3, 0, 0, 0, -42, 26, 0, 0, 99, 99) -> 77
77: main_1(3, 0, 0, 0, -42, 25, 0, 0, 99, 99) -> 78
78: main_1(3, 0, 0, 0, -42, 24, 0, 0, 99, 99) -> 79
79: main_1(3, 0, 0, 0, -42, 23, 0, 0, 99, 99) -> 80
80: main_1(3, 0, 0, 0, -42, 22, 0, 0, 99, 99) -> 81
81: main_1(3, 0, 0, 0, -42, 21, 0, 0, 99, 99) -> 82
82: main_1(3, 0, 0, 0, -42, 20, 0, 0, 99, 99) -> 83
83: main_1(3, 0, 0, 0, -42, 19, 0, 0, 99, 99) -> 84
84: main_1(3, 0, 0, 0, -42, 18, 0, 0, 99, 99) -> 85
85: main_1(3, 0, 0, 0, -42, 17, 0, 0, 99, 99) -> 86
86: main_1(3, 0, 0, 0, -42, 16, 0, 0, 99, 99) -> 87
87: main_1(3, 0, 0, 0, -42, 15, 0, 0, 99, 99) -> 88
88: main_1(3, 0, 0, 0, -42, 14, 0, 0, 99, 99) -> 89
89: main_1(3, 0, 0, 0, -42, 13, 0, 0, 99, 99) -> 90
90: main_1(3, 0, 0, 0, -42, 12, 0, 0, 99, 99) -> 91
91: main_1(3, 0, 0, 0, -42, 11, 0, 0, 99, 99) -> 92
92: main_1(3, 0, 0, 0, -42, 10, 0, 0, 99, 99) -> 93
93: main_1(3, 0, 0, 0, -42, 9, 0, 0, 99, 99) -> 94
94: main_1(3, 0, 0, 0, -42, 8, 0, 0, 99, 99) -> 95
95: main_1(3, 0, 0, 0, -42, 7, 0, 0, 99, 99) -> 96
96: main_1(3, 0, 0, 0, -42, 6, 0, 0, 99, 99) -> 97
97: main_1(3, 0, 0, 0, -42, 5, 0, 0, 99, 99) -> 98
98: main_1(3, 0, 0, 0, -42, 4, 0, 0, 99, 99) -> 99
99: main_1(3, 0, 0, 0, -42, 3, 0, 0, 99, 99) -> 100
100: main_1(3, 0, 0, 0, -42, 2, 0, 0, 99, 99) -> 101
101: main_1(3, 0, 0, 0, -42, 1, 0, 0, 99, 99) -> 102
102: main_1(3, 0, 0, 0, -42, 0, 0, 0, 99, 99) -> 103
103: main_1(2, 0, 0, 0, -42, 0, 0, 0, 99, 99) -> 104
104: main_1(2, 0, 0, 0, -42, 0, 0, 0, 98, 99) -> 105
105: main_1(2, 0, 0, 0, -42, 0, 0, 0, 97, 99) -> 106
106: main_1(2, 0, 0, 0, -42, 0, 0, 0, 96, 99) -> 107
107: main_1(2, 0, 0, 0, -42, 0, 0, 0, 95, 99) -> 108
108: main_1(2, 0, 0, 0, -42, 0, 0, 0, 94, 99) -> 109
109: main_1(2, 0, 0, 0, -42, 0, 0, 0, 93, 99) -> 110
110: main_1(2, 0, 0, 0, -42, 0, 0, 0, 92, 99) -> 111
111: main_1(2, 0, 0, 0, -42, 0, 0, 0, 91, 99) -> 112
112: main_1(2, 0, 0, 0, -42, 0, 0, 0, 90, 99) -> 113
113: main_1(2, 0, 0, 0, -42, 0, 0, 0, 89, 99) -> 114
114: main_1(2, 0, 0, 0, -42, 0, 0, 0, 88, 99) -> 115
115: main_1(2, 0, 0, 0, -42, 0, 0, 0, 87, 99) -> 116
116: main_1(2, 0, 0, 0, -42, 0, 0, 0, 86, 99) -> 117
117: main_1(2, 0, 0, 0, -42, 0, 0, 0, 85, 99) -> 118
118: main_1(2, 0, 0, 0, -42, 0, 0, 0, 84, 99) -> 119
119: main_1(2, 0, 0, 0, -42, 0, 0, 0, 83, 99) -> 120
120: main_1(2, 0, 0, 0, -42, 0, 0, 0, 82, 99) -> 121
121: main_1(2, 0, 0, 0, -42, 0, 0, 0, 81, 99) -> 122
122: main_1(2, 0, 0, 0, -42, 0, 0, 0, 80, 99) -> 123
123: main_1(2, 0, 0, 0, -42, 0, 0, 0, 79, 99) -> 124
124: main_1(2, 0, 0, 0, -42, 0, 0, 0, 78, 99) -> 125
125: main_1(2, 0, 0, 0, -42, 0, 0, 0, 77, 99) -> 126
126: main_1(2, 0, 0, 0, -42, 0, 0, 0, 76, 99) -> 127
127: main_1(2, 0, 0, 0, -42, 0, 0, 0, 75, 99) -> 128
128: main_1(2, 0, 0, 0, -42, 0, 0, 0, 74, 99) -> 129
129: main_1(2, 0, 0, 0, -42, 0, 0, 0, 73, 99) -> 130
130: main_1(2, 0, 0, 0, -42, 0, 0, 0, 72, 99) -> 131
131: main_1(2, 0, 0, 0, -42, 0, 0, 0, 71, 99) -> 132
132: main_1(2, 0, 0, 0, -42, 0, 0, 0, 70, 99) -> 133
133: main_1(2, 0, 0, 0, -42, 0, 0, 0, 69, 99) -> 134
134: main_1(2, 0, 0, 0, -42, 0, 0, 0, 68, 99) -> 135
135: main_1(2, 0, 0, 0, -42, 0, 0, 0, 67, 99) -> 136
136: main_1(2, 0, 0, 0, -42, 0, 0, 0, 66, 99) -> 137
137: main_1(2, 0, 0, 0, -42, 0, 0, 0, 65, 99) -> 138
138: main_1(2, 0, 0, 0, -42, 0, 0, 0, 64, 99) -> 139
139: main_1(2, 0, 0, 0, -42, 0, 0, 0, 63, 99) -> 140
140: main_1(2, 0, 0, 0, -42, 0, 0, 0, 62, 99) -> 141
141: main_1(2, 0, 0, 0, -42, 0, 0, 0, 61, 99) -> 142
142: main_1(2, 0, 0, 0, -42, 0, 0, 0, 60, 99) -> 143
143: main_1(2, 0, 0, 0, -42, 0, 0, 0, 59, 99) -> 144
144: main_1(2, 0, 0, 0, -42, 0, 0, 0, 58, 99) -> 145
145: main_1(2, 0, 0, 0, -42, 0, 0, 0, 57, 99) -> 146
146: main_1(2, 0, 0, 0, -42, 0, 0, 0, 56, 99) -> 147
147: main_1(2, 0, 0, 0, -42, 0, 0, 0, 55, 99) -> 148
148: main_1(2, 0, 0, 0, -42, 0, 0, 0, 54, 99) -> 149
149: main_1(2, 0, 0, 0, -42, 0, 0, 0, 53, 99) -> 150
150: main_1(2, 0, 0, 0, -42, 0, 0, 0, 52, 99) -> 151
151: main_1(2, 0, 0, 0, -42, 0, 0, 0, 51, 99) -> 152
152: main_1(2, 0, 0, 0, -42, 0, 0, 0, 50, 99) -> 153
153: main_1(2, 0, 0, 0, -42, 0, 0, 0, 49, 99) -> 154
154: main_1(2, 0, 0, 0, -42, 0, 0, 0, 48, 99) -> 155
155: main_1(2, 0, 0, 0, -42, 0, 0, 0, 47, 99) -> 156
156: main_1(2, 0, 0, 0, -42, 0, 0, 0, 46, 99) -> 157
157: main_1(2, 0, 0, 0, -42, 0, 0, 0, 45, 99) -> 158
158: main_1(2, 0, 0, 0, -42, 0, 0, 0, 44, 99) -> 159
159: main_1(2, 0, 0, 0, -42, 0, 0, 0, 43, 99) -> 160
160: main_1(2, 0, 0, 0, -42, 0, 0, 0, 42, 99) -> 161
161: main_1(2, 0, 0, 0, -42, 0, 0, 0, 41, 99) -> 162
162: main_1(2, 0, 0, 0, -42, 0, 0, 0, 40, 99) -> 163
163: main_1(2, 0, 0, 0, -42, 0, 0, 0, 39, 99) -> 164
164: main_1(2, 0, 0, 0, -42, 0, 0, 0, 38, 99) -> 165
165: main_1(2, 0, 0, 0, -42, 0, 0, 0, 37, 99) -> 166
166: main_1(2, 0, 0, 0, -42, 0, 0, 0, 36, 99) -> 167
167: main_1(2, 0, 0, 0, -42, 0, 0, 0, 35, 99) -> 168
168: main_1(2, 0, 0, 0, -42, 0, 0, 0, 34, 99) -> 169
169: main_1(2, 0, 0, 0, -42, 0, 0, 0, 33, 99) -> 170
170: main_1(2, 0, 0, 0, -42, 0, 0, 0, 32, 99) -> 171
171: main_1(2, 0, 0, 0, -42, 0, 0, 0, 31, 99) -> 172
172: main_1(2, 0, 0, 0, -42, 0, 0, 0, 30, 99) -> 173
173: main_1(2, 0, 0, 0, -42, 0, 0, 0, 29, 99) -> 174
174: main_1(2, 0, 0, 0, -42, 0, 0, 0, 28, 99) -> 175
175: main_1(2, 0, 0, 0, -42, 0, 0, 0, 27, 99) -> 176
176: main_1(2, 0, 0, 0, -42, 0, 0, 0, 26, 99) -> 177
177: main_1(2, 0, 0, 0, -42, 0, 0, 0, 25, 99) -> 178
178: main_1(2, 0, 0, 0, -42, 0, 0, 0, 24, 99) -> 179
179: main_1(2, 0, 0, 0, -42, 0, 0, 0, 23, 99) -> 180
180: main_1(2, 0, 0, 0, -42, 0, 0, 0, 22, 99) -> 181
181: main_1(2, 0, 0, 0, -42, 0, 0, 0, 21, 99) -> 182
182: main_1(2, 0, 0, 0, -42, 0, 0, 0, 20, 99) -> 183
183: main_1(2, 0, 0, 0, -42, 0, 0, 0, 19, 99) -> 184
184: main_1(2, 0, 0, 0, -42, 0, 0, 0, 18, 99) -> 185
185: main_1(2, 0, 0, 0, -42, 0, 0, 0, 17, 99) -> 186
186: main_1(2, 0, 0, 0, -42, 0, 0, 0, 16, 99) -> 187
187: main_1(2, 0, 0, 0, -42, 0, 0, 0, 15, 99) -> 188
188: main_1(2, 0, 0, 0, -42, 0, 0, 0, 14, 99) -> 189
189: main_1(2, 0, 0, 0, -42, 0, 0, 0, 13, 99) -> 190
190: main_1(2, 0, 0, 0, -42, 0, 0, 0, 12, 99) -> 191
191: main_1(2, 0, 0, 0, -42, 0, 0, 0, 11, 99) -> 192
192: main_1(2, 0, 0, 0, -42, 0, 0, 0, 10, 99) -> 193
193: main_1(2, 0, 0, 0, -42, 0, 0, 0, 9, 99) -> 194
194: main_1(2, 0, 0, 0, -42, 0, 0, 0, 8, 99) -> 195
195: main_1(2, 0, 0, 0, -42, 0, 0, 0, 7, 99) -> 196
196: main_1(2, 0, 0, 0, -42, 0, 0, 0, 6, 99) -> 197
197: main_1(2, 0, 0, 0, -42, 0, 0, 0, 5, 99) -> 198
198: main_1(2, 0, 0, 0, -42, 0, 0, 0, 4, 99) -> 199
199: main_1(2, 0, 0, 0, -42, 0, 0, 0, 3, 99) -> 200
200: main_1(2, 0, 0, 0, -42, 0, 0, 0, 2, 99) -> 201
201: main_1(2, 0, 0, 0, -42, 0, 0, 0, 1, 99) -> 202
202: main_1(2, 0, 0, 0, -42, 0, 0, 0, 0, 99) -> 203
203: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 99) -> 204
204: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 98) -> 205
205: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 97) -> 206
206: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 96) -> 207
207: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 95) -> 208
208: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 94) -> 209
209: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 93) -> 210
210: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 92) -> 211
211: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 91) -> 212
212: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 90) -> 213
213: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 89) -> 214
214: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 88) -> 215
215: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 87) -> 216
216: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 86) -> 217
217: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 85) -> 218
218: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 84) -> 219
219: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 83) -> 220
220: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 82) -> 221
221: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 81) -> 222
222: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 80) -> 223
223: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 79) -> 224
224: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 78) -> 225
225: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 77) -> 226
226: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 76) -> 227
227: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 75) -> 228
228: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 74) -> 229
229: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 73) -> 230
230: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 72) -> 231
231: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 71) -> 232
232: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 70) -> 233
233: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 69) -> 234
234: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 68) -> 235
235: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 67) -> 236
236: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 66) -> 237
237: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 65) -> 238
238: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 64) -> 239
239: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 63) -> 240
240: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 62) -> 241
241: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 61) -> 242
242: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 60) -> 243
243: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 59) -> 244
244: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 58) -> 245
245: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 57) -> 246
246: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 56) -> 247
247: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 55) -> 248
248: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 54) -> 249
249: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 53) -> 250
250: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 52) -> 251
251: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 51) -> 252
252: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 50) -> 253
253: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 49) -> 254
254: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 48) -> 255
255: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 47) -> 256
256: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 46) -> 257
257: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 45) -> 258
258: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 44) -> 259
259: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 43) -> 260
260: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 42) -> 261
261: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 41) -> 262
262: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 40) -> 263
263: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 39) -> 264
264: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 38) -> 265
265: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 37) -> 266
266: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 36) -> 267
267: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 35) -> 268
268: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 34) -> 269
269: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 33) -> 270
270: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 32) -> 271
271: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 31) -> 272
272: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 30) -> 273
273: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 29) -> 274
274: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 28) -> 275
275: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 27) -> 276
276: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 26) -> 277
277: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 25) -> 278
278: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 24) -> 279
279: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 23) -> 280
280: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 22) -> 281
281: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 21) -> 282
282: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 20) -> 283
283: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 19) -> 284
284: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 18) -> 285
285: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 17) -> 286
286: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 16) -> 287
287: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 15) -> 288
288: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 14) -> 289
289: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 13) -> 290
290: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 12) -> 291
291: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 11) -> 292
292: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 10) -> 293
293: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 9) -> 294
294: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 8) -> 295
295: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 7) -> 296
296: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 6) -> 297
297: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 5) -> 298
298: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 4) -> 299
299: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 3) -> 300
300: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 2) -> 301
301: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 1) -> 302
302: main_1(1, 0, 0, 0, -42, 0, 0, 0, 0, 0) -> 303
303: main_1(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

booleans.smt2
Warning: ignoring exit
sat
(define-fun main_1 ((A Int) (B Int) (C Int) (D Int) (E Bool) (F Int)) Bool (or (= A 0) (and (= A 1) (and (= E true) (and (and (and (and (and (and (and (and (>= (+ (* 2 C) (+ (* (- 2) D) F)) B) (<= B 999999)) (>= B 0)) (<= C 499998)) (<= D 499999)) (>= D 1)) (<= F 999999)) (>= F 4)) (or (>= (- F B) 3) (and (= (+ B (+ (* (- 2) C) (- (* 2 D) F))) 0) (>= (- D C) 1))))))))

chc-LIA-Lin_421.smt2
Warning: ignoring exit
sat
(define-fun predh11_1 ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Int) (Q1 Int) (R1 Int) (S1 Int) (T1 Int) (U1 Int) (V1 Int) (W1 Int) (X1 Int) (Y1 Int) (Z1 Int) (A2 Int) (B2 Int) (C2 Int) (D2 Int) (E2 Int) (F2 Int) (G2 Int) (H2 Int)) Bool (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= H2 D1) (= G2 C1)) (= (- F2 F) 1)) (= E2 1)) (= D2 F)) (= C2 1)) (= (- B2 F) 1)) (= A2 1)) (= Z1 F)) (= Y1 1)) (= X1 F)) (= W1 1)) (= V1 R)) (= U1 Q)) (= T1 P)) (= (+ S1 (- L R1)) 0)) (= Q1 1)) (= P1 L)) (= O1 K)) (= N1 J)) (= M1 I)) (= L1 H)) (= K1 G)) (= J1 F)) (= I1 E)) (= H1 D)) (= G1 C)) (= F1 B)) (= E1 A)) (and (>= (- F J) (- 1)) (>= J 1))))
