
merge.horn
SOLVABLE
merge(A,B,C) :- ((A + (B - C)) = 0).

gcd.horn
SOLVABLE
rf(A,B,C) :- (((A >= C); (A =< -1)); (B =< -1)).

Levenstein.horn
SOLVABLE
p1(A,B,C) :- ((((A >= 1), (B >= 1)), (C =< 1)), (C >= 0)).
p2(A,B,C,D) :- ((((A >= 1), (B >= 1)), (C =< 1)), (C >= 0)).
p3(A,B,C,D,E) :- ((((A >= 1), (B >= 1)), (C =< 1)), (C >= 0)).
p4(A,B,C,D,E) :- (((A >= 1), (B >= 1)), ((A >= E); (B >= E))).
rf(A,B,C) :- ((((A = C), (B = 0)); ((((A + (B - C)) >= 0), (A >= C)), (A >= 0))); ((((A + (B - C)) >= 0), (A >= 0)), (B >= C))).

disjunctive.horn
SOLVABLE
r1(A,B) :- (A = 0).
r2(A,B) :- \+((A = 0)).
r3(A,B,C) :- ((C = A), (A >= 2)).
r4(A,B,C) :- ((C = A), ((A >= B), (A >= 2))).
r5(A,B,C) :- ((C = A), (((B - A) >= 1), (A >= 2))).
rf(A,B,C) :- ((A >= 0), ((B =< -1); (C >= 0))).

mccarthy91.nts.horn
SOLVABLE
f_s1(A,B,C,D) :- (((C = A), (D = B)), (B =< 111)).
f_s2(A,B,C,D) :- (((D = B), ((C - B) = 11)), (B =< 100)).
f_s3(A,B,C,D) :- ((D = B), (((B =< 100), (C =< 101)), (C >= 91))).
f_sf(A,B,C,D) :- ((D = B), ((((B =< 111), (C =< 101)), (C >= 91)), ((B >= 102); (C =< 91)))).
main_s1(A,B,C,D) :- ((D = B), (C = A)).
main_s2(A,B,C,D) :- ((C = A), (D =< 100)).
main_s3(A,B,C,D) :- ((C = 91), (D =< 100)).
main_sf(A,B,C,D) :- true.

mccarthy92.nts.horn
SOLVABLE
f_s1(A,B,C,D) :- (((C = A), (D = B)), ((B =< 112), ((B mod 2) = 0))).
f_s2(A,B,C,D) :- ((((D = B), ((C - B) = 12)), (B =< 100)), ((B mod 2) = 0)).
f_s3(A,B,C,D) :- ((D = B), ((((B =< 100), (C =< 102)), (C >= 91)), ((C mod 2) = 0))).
f_sf(A,B,C,D) :- ((D = B), ((((B =< 112), (C =< 102)), (C >= 91)), ((C = 92); ((B >= 101), (((C mod 2) = 0), (((B - C) >= 13); ((((B - C) = 12), (((1 + B) mod 2) = 0)); (((C mod 2) = 0), (((B - C) >= 12); ((((B - C) = 11), (((1 + B) mod 2) = 0)); (((B - C) = 10), ((B mod 2) = 0)))))))))))).
main_s1(A,B,C,D,E,F) :- (((F = C), (E = B)), (D = A)).
main_s2(A,B,C,D,E,F) :- ((((E = B), (D = A)), (F =< 100)), ((F mod 2) = 0)).
main_s3(A,B,C,D,E,F) :- ((((E = 92), (D = A)), (F =< 100)), ((F mod 2) = 0)).
main_sf(A,B,C,D,E,F) :- true.

palindrome.nts.horn
SOLVABLE
main_q0(A,B,C,D,E,F) :- (((F = C), (E = B)), (D = A)).
main_q1(A,B,C,D,E,F) :- ((E >= F), (F >= 0)).
main_q2(A,B,C,D,E,F) :- ((((E >= F), (F >= 0)), (D >= 1)), ((((E + (-2 * D)) - F) >= -3); ((F = E), (D = 1)))).
main_qf :- true.
palindrome_q0(A,B,C,D,E,F,G,H) :- (((((E = A), (F = B)), (G = C)), (H = D)), ((B >= 0), (C >= 0))).
palindrome_q1(A,B,C,D,E,F,G,H) :- (((((H = D), (G = C)), (F = B)), (E = A)), (((B - C) >= 1), (C >= 0))).
palindrome_q2(A,B,C,D,E,F,G,H) :- ((((E = A), (F = B)), (G = C)), ((((B + ((-2 * H) - C)) >= -1), (C >= 0)), (H >= 1))).
palindrome_q3(A,B,C,D,E,F,G,H) :- (((((H = D), (G = C)), (F = B)), (E = A)), (((C >= B), (C >= 0)), (B >= 0))).
palindrome_q4(A,B,C,D,E,F) :- (((E = B), (F = C)), ((((B >= 0), (C >= 0)), (D >= 1)), ((((C + (-2 * D)) - B) >= -3); ((D = 1), (B >= C))))).

listcounter.error.nts.horn
NOT SOLVABLE

0: FALSE -> 1
1: main_h_30(0, 0, 0, 0, 0, 1, 0, 0, -1, 0, 0, 1) -> 2
2: main_h_28(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1) -> 3
3: main_h_24(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1) -> 4
4: main_h_22(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1) -> 5
5: main_h_21(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1) -> 6
6: main_h_18(0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1) -> 7
7: main_h_16(0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1) -> 8
8: main_h_13(0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1) -> 9
9: main_h_11(0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1) -> 10
10: main_h_9(0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1) -> 11
11: main_h_8(0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1) -> 12
12: main_h_7(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1) -> 13
13: main_h_6(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1) -> 14
14: main_h_5(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1) -> 15
15: main_h_4(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1) -> 16
16: main_h_3(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1) -> 17
17: main_h_2(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1) -> 18
18: main_h_1(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1)

long-body.horn
SOLVABLE
p(A) :- (A >= 3).
q(A) :- (A >= 18).

long-body2.horn
NOT SOLVABLE

0: FALSE -> 1
1: q(20) -> 3, 3, 3, 3, 2, 3
2: p(5)
3: p(3)

nullary-bug.horn
NOT SOLVABLE

0: FALSE -> 1
1: Block6_1(0, 1) -> 2
2: Block6(0, 0) -> 3
3: Block4_1(0, 0, 0, 1) -> 4, 5
4: iTestggvoidgawaitAllopk_post -> 43
5: Block4(0, 0, 0, 1) -> 6
6: Block3_5(0, 0, 0, 1) -> 7, 8
7: iTestggvoidgonlyPreserveointpk_post(0) -> 28
8: Block3_4(0, 0, 0, 1) -> 9
9: Block3_3(0, 0, 0, 0, 0, 1) -> 10
10: Block3_2(0, 0, 0, 0, 1) -> 26, 11
11: Block3_1(0, 0, 0, 1) -> 12, 13
12: iTestggvoidgmethod_v1ointpk_post(0) -> 28
13: Block3(0, 0, 0, 0, 0, 0, 1) -> 14
14: Block1_11(0, 0, 0, 0, 0, 0, 0, 1) -> 15, 16
15: iTestggbooleangnondetBoolopk_post(0) -> 28
16: Block1_10(0, 0, 0, 0, 0, 0, 1) -> 20, 17
17: Block1_9(0, 0, 0, 0, 0, 1) -> 18, 19
18: iTestggintgnondetIntopk_post(1) -> 27
19: Block1_8(0, 0, 0, 0, 0) -> 20, 21
20: iTestggintgnondetIntopk_post(0) -> 28
21: Block1_7(0, 0, 0, 0) -> 22
22: Block1_6(0, 0, 0, 0) -> 23
23: Block1_5(0, 0, 0) -> 26, 24
24: Block1_4(0, 0, 0) -> 25, 48
25: iTestggvoidgiclinitkopk_post -> 43
26: inv_JayhornGlobalsClassVar(0, 0) -> 45
27: Block0(1) -> 29
28: Block0(0) -> 30
29: Block1_5(1) -> 31, 36
30: Block1_5(0) -> 31, 42
31: ijavaulanguObjectggvoidgiinitkopk_post(0, 0) -> 32
32: Block0_2(0) -> 33
33: Block0_1(0, 0, 0) -> 34
34: Block0(0, 0, 0, 0) -> 35
35: ijavaulanguObjectggvoidgiinitkopk_pre(0) -> 42
36: Block1_4(1, 0) -> 37
37: Block1_3(1, 0, 0) -> 38
38: Block1_2(1, 0, 1, 0) -> 39
39: Block1_1(1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0) -> 40
40: Block1(1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) -> 41
41: iTestggvoidgmainoJayArray_java_lang_Stringpk_pre(1)
42: Block1_4(0, 0) -> 48
43: Block0 -> 44
44: Block1_2 -> 45
45: Block1_1(0, 0) -> 46
46: Block1(0, 0) -> 47
47: iTestggvoidgiclinitkopk_pre -> 48
48: Block1_3(0, 0, 0) -> 49
49: Block1_2(0, 0, 0, 0) -> 50
50: Block1_1(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) -> 51
51: Block1(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) -> 52
52: iTestggvoidgmainoJayArray_java_lang_Stringpk_pre(0)
mult.horn
SOLVABLE
nullary-bug.horn
NOT SOLVABLE

0: FALSE -> 1
1: Block6_1(0, 1) -> 2
2: Block6(0, 0) -> 3
3: Block4_1(0, 0, 0, 1) -> 4, 5
4: iTestggvoidgawaitAllopk_post -> 43
5: Block4(0, 0, 0, 1) -> 6
6: Block3_5(0, 0, 0, 1) -> 7, 8
7: iTestggvoidgonlyPreserveointpk_post(0) -> 27
8: Block3_4(0, 0, 0, 1) -> 9
9: Block3_3(0, 0, 0, 0, 0, 1) -> 10
10: Block3_2(0, 0, 0, 0, 1) -> 26, 11
11: Block3_1(0, 0, 0, 1) -> 12, 13
12: iTestggvoidgmethod_v1ointpk_post(0) -> 27
13: Block3(0, 0, 0, 0, 0, 0, 1) -> 14
14: Block1_11(0, 0, 0, 0, 0, 0, 0, 1) -> 15, 16
15: iTestggbooleangnondetBoolopk_post(0) -> 27
16: Block1_10(0, 0, 0, 0, 0, 0, 1) -> 20, 17
17: Block1_9(0, 0, 0, 0, 0, 1) -> 18, 19
18: iTestggintgnondetIntopk_post(1) -> 28
19: Block1_8(0, 0, 0, 0, 0) -> 20, 21
20: iTestggintgnondetIntopk_post(0) -> 27
21: Block1_7(0, 0, 0, 0) -> 22
22: Block1_6(0, 0, 0, 0) -> 23
23: Block1_5(0, 0, 0) -> 26, 24
24: Block1_4(0, 0, 0) -> 25, 48
25: iTestggvoidgiclinitkopk_post -> 43
26: inv_JayhornGlobalsClassVar(0, 0) -> 45
27: Block0(0) -> 29
28: Block0(1) -> 30
29: Block1_5(0) -> 31, 36
30: Block1_5(1) -> 31, 37
31: ijavaulanguObjectggvoidgiinitkopk_post(0, 0) -> 32
32: Block0_2(0) -> 33
33: Block0_1(0, 0, 0) -> 34
34: Block0(0, 0, 0, 0) -> 35
35: ijavaulanguObjectggvoidgiinitkopk_pre(0) -> 37
36: Block1_4(0, 0) -> 48
37: Block1_4(1, 0) -> 38
38: Block1_3(1, 0, 0) -> 39
39: Block1_2(1, 0, 1, 0) -> 40
40: Block1_1(1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0) -> 41
41: Block1(1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) -> 42
42: iTestggvoidgmainoJayArray_java_lang_Stringpk_pre(1)
43: Block0 -> 44
44: Block1_2 -> 45
45: Block1_1(0, 0) -> 46
46: Block1(0, 0) -> 47
47: iTestggvoidgiclinitkopk_pre -> 48
48: Block1_3(0, 0, 0) -> 49
49: Block1_2(0, 0, 0, 0) -> 50
50: Block1_1(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) -> 51
51: Block1(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) -> 52
52: iTestggvoidgmainoJayArray_java_lang_Stringpk_pre(0)
zero-iterations.horn
---------------------------- Loading CEGAR hints -------------------------------

------------------------------- Preprocessing ----------------------------------
                                                       #clauses  #relation syms
Initially:                                             7         3



----------------------------------- CEGAR --------------------------------------
Theories: Types
Forward  constant and interval propagation +++++++++++++++

Backward constant and interval propagation 

Unique satisfiable clauses: 0

Starting CEGAR ...


--------------------------------- Statistics -----------------------------------
CEGAR iterations:                                      0
Final number of abstract states:                       0
Final number of matched abstract states:               0
Final number of abstract edges:                        0
Number of generated predicates:                        3
Average predicate size (# of sub-formulas):            1.00
Number of implication checks:                          0

Number of implication checks (setup):                  0
Number of implication checks (positive):               0
Number of implication checks (negative):               0
--------------------------------------------------------------------------------

SOLVABLE
a(A) :- (A >= 1).
b(A) :- (A >= 0).
c(A) :- (A >= 2).
long-body2.horn
NOT SOLVABLE

0: FALSE -> 1
1: q(20) -> 3, 3, 3, 3, 2, 3
2: p(5)
3: p(3)
